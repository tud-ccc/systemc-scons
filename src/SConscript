# Copyright 2017 TU Dresden

# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#
# Authors: Christian Menard

Import('env')

env = env.Clone()

conf = Configure(env)

s_file = None
if conf.CheckDeclaration("__i386__"):
    s_file = 'i386.s'
if conf.CheckDeclaration("__x86_64__"):
    s_file = 'iX86_64.s'
conf.Finish()

if s_file is None:
    print 'Unsupported CPU architecture!'
    Exit(1)

env.Append(CXXFLAGS=['-DSC_INCLUDE_FX', '-pthread'])
env.Append(CPPPATH=['.'])
env.Append(CFLAGS=['-DSC_INCLUDE_FX', '-pthread'])
env.Append(CPATH=['.'])

src = Glob('sysc/kernel/*.cpp')
src += ['sysc/qt/qt.c', 'sysc/qt/md/' + s_file]
src += Glob('sysc/communication/*.cpp')
src += Glob('sysc/tracing/*.cpp')
src += Glob('sysc/utils/*.cpp')
src += Glob('sysc/datatypes/bit/*.cpp')
src += Glob('sysc/datatypes/fx/*.cpp')
src += Glob('sysc/datatypes/int/*.cpp')
src += Glob('sysc/datatypes/misc/*.cpp')

libsystemc = env.SharedLibrary('libsystemc-2.3.1.so', src)

Return('libsystemc')
